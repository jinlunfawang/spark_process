// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: avid_attribute.proto

package com.bilibili.sycpb.flink.api;

public final class AvidAttributeProfile {
  private AvidAttributeProfile() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface AvidAttributeOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int64 mid = 1;
    /**
     * <code>required int64 mid = 1;</code>
     */
    boolean hasMid();
    /**
     * <code>required int64 mid = 1;</code>
     */
    long getMid();

    // optional int32 tid = 2;
    /**
     * <code>optional int32 tid = 2;</code>
     */
    boolean hasTid();
    /**
     * <code>optional int32 tid = 2;</code>
     */
    int getTid();

    // optional int32 sub_tid = 3;
    /**
     * <code>optional int32 sub_tid = 3;</code>
     */
    boolean hasSubTid();
    /**
     * <code>optional int32 sub_tid = 3;</code>
     */
    int getSubTid();

    // repeated int64 tags = 4;
    /**
     * <code>repeated int64 tags = 4;</code>
     */
    java.util.List<java.lang.Long> getTagsList();
    /**
     * <code>repeated int64 tags = 4;</code>
     */
    int getTagsCount();
    /**
     * <code>repeated int64 tags = 4;</code>
     */
    long getTags(int index);

    // optional int32 video_duration = 5;
    /**
     * <code>optional int32 video_duration = 5;</code>
     */
    boolean hasVideoDuration();
    /**
     * <code>optional int32 video_duration = 5;</code>
     */
    int getVideoDuration();

    // optional int32 is_bussiness = 6;
    /**
     * <code>optional int32 is_bussiness = 6;</code>
     */
    boolean hasIsBussiness();
    /**
     * <code>optional int32 is_bussiness = 6;</code>
     */
    int getIsBussiness();

    // required int64 avid = 7;
    /**
     * <code>required int64 avid = 7;</code>
     */
    boolean hasAvid();
    /**
     * <code>required int64 avid = 7;</code>
     */
    long getAvid();
  }
  /**
   * Protobuf type {@code com.bilibili.sycpb.flink.api.AvidAttribute}
   */
  public static final class AvidAttribute extends
      com.google.protobuf.GeneratedMessage
      implements AvidAttributeOrBuilder {
    // Use AvidAttribute.newBuilder() to construct.
    private AvidAttribute(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private AvidAttribute(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final AvidAttribute defaultInstance;
    public static AvidAttribute getDefaultInstance() {
      return defaultInstance;
    }

    public AvidAttribute getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private AvidAttribute(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              mid_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              tid_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              subTid_ = input.readInt32();
              break;
            }
            case 32: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                tags_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000008;
              }
              tags_.add(input.readInt64());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                tags_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                tags_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 40: {
              bitField0_ |= 0x00000008;
              videoDuration_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000010;
              isBussiness_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000020;
              avid_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          tags_ = java.util.Collections.unmodifiableList(tags_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.bilibili.sycpb.flink.api.AvidAttributeProfile.internal_static_com_bilibili_sycpb_flink_api_AvidAttribute_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.bilibili.sycpb.flink.api.AvidAttributeProfile.internal_static_com_bilibili_sycpb_flink_api_AvidAttribute_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.bilibili.sycpb.flink.api.AvidAttributeProfile.AvidAttribute.class, com.bilibili.sycpb.flink.api.AvidAttributeProfile.AvidAttribute.Builder.class);
    }

    public static com.google.protobuf.Parser<AvidAttribute> PARSER =
        new com.google.protobuf.AbstractParser<AvidAttribute>() {
      public AvidAttribute parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AvidAttribute(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<AvidAttribute> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int64 mid = 1;
    public static final int MID_FIELD_NUMBER = 1;
    private long mid_;
    /**
     * <code>required int64 mid = 1;</code>
     */
    public boolean hasMid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int64 mid = 1;</code>
     */
    public long getMid() {
      return mid_;
    }

    // optional int32 tid = 2;
    public static final int TID_FIELD_NUMBER = 2;
    private int tid_;
    /**
     * <code>optional int32 tid = 2;</code>
     */
    public boolean hasTid() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 tid = 2;</code>
     */
    public int getTid() {
      return tid_;
    }

    // optional int32 sub_tid = 3;
    public static final int SUB_TID_FIELD_NUMBER = 3;
    private int subTid_;
    /**
     * <code>optional int32 sub_tid = 3;</code>
     */
    public boolean hasSubTid() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 sub_tid = 3;</code>
     */
    public int getSubTid() {
      return subTid_;
    }

    // repeated int64 tags = 4;
    public static final int TAGS_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Long> tags_;
    /**
     * <code>repeated int64 tags = 4;</code>
     */
    public java.util.List<java.lang.Long>
        getTagsList() {
      return tags_;
    }
    /**
     * <code>repeated int64 tags = 4;</code>
     */
    public int getTagsCount() {
      return tags_.size();
    }
    /**
     * <code>repeated int64 tags = 4;</code>
     */
    public long getTags(int index) {
      return tags_.get(index);
    }

    // optional int32 video_duration = 5;
    public static final int VIDEO_DURATION_FIELD_NUMBER = 5;
    private int videoDuration_;
    /**
     * <code>optional int32 video_duration = 5;</code>
     */
    public boolean hasVideoDuration() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 video_duration = 5;</code>
     */
    public int getVideoDuration() {
      return videoDuration_;
    }

    // optional int32 is_bussiness = 6;
    public static final int IS_BUSSINESS_FIELD_NUMBER = 6;
    private int isBussiness_;
    /**
     * <code>optional int32 is_bussiness = 6;</code>
     */
    public boolean hasIsBussiness() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 is_bussiness = 6;</code>
     */
    public int getIsBussiness() {
      return isBussiness_;
    }

    // required int64 avid = 7;
    public static final int AVID_FIELD_NUMBER = 7;
    private long avid_;
    /**
     * <code>required int64 avid = 7;</code>
     */
    public boolean hasAvid() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required int64 avid = 7;</code>
     */
    public long getAvid() {
      return avid_;
    }

    private void initFields() {
      mid_ = 0L;
      tid_ = 0;
      subTid_ = 0;
      tags_ = java.util.Collections.emptyList();
      videoDuration_ = 0;
      isBussiness_ = 0;
      avid_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasMid()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAvid()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, mid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, tid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, subTid_);
      }
      for (int i = 0; i < tags_.size(); i++) {
        output.writeInt64(4, tags_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(5, videoDuration_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(6, isBussiness_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt64(7, avid_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, mid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, tid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, subTid_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < tags_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(tags_.get(i));
        }
        size += dataSize;
        size += 1 * getTagsList().size();
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, videoDuration_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, isBussiness_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(7, avid_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.bilibili.sycpb.flink.api.AvidAttributeProfile.AvidAttribute parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.bilibili.sycpb.flink.api.AvidAttributeProfile.AvidAttribute parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.bilibili.sycpb.flink.api.AvidAttributeProfile.AvidAttribute parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.bilibili.sycpb.flink.api.AvidAttributeProfile.AvidAttribute parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.bilibili.sycpb.flink.api.AvidAttributeProfile.AvidAttribute parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.bilibili.sycpb.flink.api.AvidAttributeProfile.AvidAttribute parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.bilibili.sycpb.flink.api.AvidAttributeProfile.AvidAttribute parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.bilibili.sycpb.flink.api.AvidAttributeProfile.AvidAttribute parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.bilibili.sycpb.flink.api.AvidAttributeProfile.AvidAttribute parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.bilibili.sycpb.flink.api.AvidAttributeProfile.AvidAttribute parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.bilibili.sycpb.flink.api.AvidAttributeProfile.AvidAttribute prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.bilibili.sycpb.flink.api.AvidAttribute}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.bilibili.sycpb.flink.api.AvidAttributeProfile.AvidAttributeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.bilibili.sycpb.flink.api.AvidAttributeProfile.internal_static_com_bilibili_sycpb_flink_api_AvidAttribute_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.bilibili.sycpb.flink.api.AvidAttributeProfile.internal_static_com_bilibili_sycpb_flink_api_AvidAttribute_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.bilibili.sycpb.flink.api.AvidAttributeProfile.AvidAttribute.class, com.bilibili.sycpb.flink.api.AvidAttributeProfile.AvidAttribute.Builder.class);
      }

      // Construct using com.bilibili.sycpb.flink.api.AvidAttributeProfile.AvidAttribute.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        mid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        tid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        subTid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        tags_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        videoDuration_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        isBussiness_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        avid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.bilibili.sycpb.flink.api.AvidAttributeProfile.internal_static_com_bilibili_sycpb_flink_api_AvidAttribute_descriptor;
      }

      public com.bilibili.sycpb.flink.api.AvidAttributeProfile.AvidAttribute getDefaultInstanceForType() {
        return com.bilibili.sycpb.flink.api.AvidAttributeProfile.AvidAttribute.getDefaultInstance();
      }

      public com.bilibili.sycpb.flink.api.AvidAttributeProfile.AvidAttribute build() {
        com.bilibili.sycpb.flink.api.AvidAttributeProfile.AvidAttribute result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.bilibili.sycpb.flink.api.AvidAttributeProfile.AvidAttribute buildPartial() {
        com.bilibili.sycpb.flink.api.AvidAttributeProfile.AvidAttribute result = new com.bilibili.sycpb.flink.api.AvidAttributeProfile.AvidAttribute(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.mid_ = mid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.tid_ = tid_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.subTid_ = subTid_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          tags_ = java.util.Collections.unmodifiableList(tags_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.tags_ = tags_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.videoDuration_ = videoDuration_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.isBussiness_ = isBussiness_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000020;
        }
        result.avid_ = avid_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.bilibili.sycpb.flink.api.AvidAttributeProfile.AvidAttribute) {
          return mergeFrom((com.bilibili.sycpb.flink.api.AvidAttributeProfile.AvidAttribute)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.bilibili.sycpb.flink.api.AvidAttributeProfile.AvidAttribute other) {
        if (other == com.bilibili.sycpb.flink.api.AvidAttributeProfile.AvidAttribute.getDefaultInstance()) return this;
        if (other.hasMid()) {
          setMid(other.getMid());
        }
        if (other.hasTid()) {
          setTid(other.getTid());
        }
        if (other.hasSubTid()) {
          setSubTid(other.getSubTid());
        }
        if (!other.tags_.isEmpty()) {
          if (tags_.isEmpty()) {
            tags_ = other.tags_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureTagsIsMutable();
            tags_.addAll(other.tags_);
          }
          onChanged();
        }
        if (other.hasVideoDuration()) {
          setVideoDuration(other.getVideoDuration());
        }
        if (other.hasIsBussiness()) {
          setIsBussiness(other.getIsBussiness());
        }
        if (other.hasAvid()) {
          setAvid(other.getAvid());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasMid()) {
          
          return false;
        }
        if (!hasAvid()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.bilibili.sycpb.flink.api.AvidAttributeProfile.AvidAttribute parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.bilibili.sycpb.flink.api.AvidAttributeProfile.AvidAttribute) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int64 mid = 1;
      private long mid_ ;
      /**
       * <code>required int64 mid = 1;</code>
       */
      public boolean hasMid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int64 mid = 1;</code>
       */
      public long getMid() {
        return mid_;
      }
      /**
       * <code>required int64 mid = 1;</code>
       */
      public Builder setMid(long value) {
        bitField0_ |= 0x00000001;
        mid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 mid = 1;</code>
       */
      public Builder clearMid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        mid_ = 0L;
        onChanged();
        return this;
      }

      // optional int32 tid = 2;
      private int tid_ ;
      /**
       * <code>optional int32 tid = 2;</code>
       */
      public boolean hasTid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 tid = 2;</code>
       */
      public int getTid() {
        return tid_;
      }
      /**
       * <code>optional int32 tid = 2;</code>
       */
      public Builder setTid(int value) {
        bitField0_ |= 0x00000002;
        tid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tid = 2;</code>
       */
      public Builder clearTid() {
        bitField0_ = (bitField0_ & ~0x00000002);
        tid_ = 0;
        onChanged();
        return this;
      }

      // optional int32 sub_tid = 3;
      private int subTid_ ;
      /**
       * <code>optional int32 sub_tid = 3;</code>
       */
      public boolean hasSubTid() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 sub_tid = 3;</code>
       */
      public int getSubTid() {
        return subTid_;
      }
      /**
       * <code>optional int32 sub_tid = 3;</code>
       */
      public Builder setSubTid(int value) {
        bitField0_ |= 0x00000004;
        subTid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 sub_tid = 3;</code>
       */
      public Builder clearSubTid() {
        bitField0_ = (bitField0_ & ~0x00000004);
        subTid_ = 0;
        onChanged();
        return this;
      }

      // repeated int64 tags = 4;
      private java.util.List<java.lang.Long> tags_ = java.util.Collections.emptyList();
      private void ensureTagsIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          tags_ = new java.util.ArrayList<java.lang.Long>(tags_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated int64 tags = 4;</code>
       */
      public java.util.List<java.lang.Long>
          getTagsList() {
        return java.util.Collections.unmodifiableList(tags_);
      }
      /**
       * <code>repeated int64 tags = 4;</code>
       */
      public int getTagsCount() {
        return tags_.size();
      }
      /**
       * <code>repeated int64 tags = 4;</code>
       */
      public long getTags(int index) {
        return tags_.get(index);
      }
      /**
       * <code>repeated int64 tags = 4;</code>
       */
      public Builder setTags(
          int index, long value) {
        ensureTagsIsMutable();
        tags_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 tags = 4;</code>
       */
      public Builder addTags(long value) {
        ensureTagsIsMutable();
        tags_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 tags = 4;</code>
       */
      public Builder addAllTags(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureTagsIsMutable();
        super.addAll(values, tags_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 tags = 4;</code>
       */
      public Builder clearTags() {
        tags_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      // optional int32 video_duration = 5;
      private int videoDuration_ ;
      /**
       * <code>optional int32 video_duration = 5;</code>
       */
      public boolean hasVideoDuration() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 video_duration = 5;</code>
       */
      public int getVideoDuration() {
        return videoDuration_;
      }
      /**
       * <code>optional int32 video_duration = 5;</code>
       */
      public Builder setVideoDuration(int value) {
        bitField0_ |= 0x00000010;
        videoDuration_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 video_duration = 5;</code>
       */
      public Builder clearVideoDuration() {
        bitField0_ = (bitField0_ & ~0x00000010);
        videoDuration_ = 0;
        onChanged();
        return this;
      }

      // optional int32 is_bussiness = 6;
      private int isBussiness_ ;
      /**
       * <code>optional int32 is_bussiness = 6;</code>
       */
      public boolean hasIsBussiness() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 is_bussiness = 6;</code>
       */
      public int getIsBussiness() {
        return isBussiness_;
      }
      /**
       * <code>optional int32 is_bussiness = 6;</code>
       */
      public Builder setIsBussiness(int value) {
        bitField0_ |= 0x00000020;
        isBussiness_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 is_bussiness = 6;</code>
       */
      public Builder clearIsBussiness() {
        bitField0_ = (bitField0_ & ~0x00000020);
        isBussiness_ = 0;
        onChanged();
        return this;
      }

      // required int64 avid = 7;
      private long avid_ ;
      /**
       * <code>required int64 avid = 7;</code>
       */
      public boolean hasAvid() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required int64 avid = 7;</code>
       */
      public long getAvid() {
        return avid_;
      }
      /**
       * <code>required int64 avid = 7;</code>
       */
      public Builder setAvid(long value) {
        bitField0_ |= 0x00000040;
        avid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 avid = 7;</code>
       */
      public Builder clearAvid() {
        bitField0_ = (bitField0_ & ~0x00000040);
        avid_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.bilibili.sycpb.flink.api.AvidAttribute)
    }

    static {
      defaultInstance = new AvidAttribute(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.bilibili.sycpb.flink.api.AvidAttribute)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_bilibili_sycpb_flink_api_AvidAttribute_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_bilibili_sycpb_flink_api_AvidAttribute_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\024avid_attribute.proto\022\034com.bilibili.syc" +
      "pb.flink.api\"\204\001\n\rAvidAttribute\022\013\n\003mid\030\001 " +
      "\002(\003\022\013\n\003tid\030\002 \001(\005\022\017\n\007sub_tid\030\003 \001(\005\022\014\n\004tag" +
      "s\030\004 \003(\003\022\026\n\016video_duration\030\005 \001(\005\022\024\n\014is_bu" +
      "ssiness\030\006 \001(\005\022\014\n\004avid\030\007 \002(\003B4\n\034com.bilib" +
      "ili.sycpb.flink.apiB\024AvidAttributeProfil" +
      "e"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_com_bilibili_sycpb_flink_api_AvidAttribute_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_com_bilibili_sycpb_flink_api_AvidAttribute_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_bilibili_sycpb_flink_api_AvidAttribute_descriptor,
              new java.lang.String[] { "Mid", "Tid", "SubTid", "Tags", "VideoDuration", "IsBussiness", "Avid", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
